#cloud-config
#verify if wheel already has good enough permissions
users:
  - default
  - name: gw-user
    sudo: ALL=(ALL) NOPASSWD:ALL
    lock_passwd: true
    ssh_authorized_keys:
      - ${public_key_openssh}
  - name: packer
    inactive: true
runcmd:
  - echo ${rancher_internal_ip} ${rancher_server_name} >> /etc/hosts
  - yum update -y
  - curl https://stedolan.github.io/jq/download/linux64/jq > /usr/bin/jq && chmod +x /usr/bin/jq
  #  - curl -sL https://releases.rancher.com/install-docker/19.03.sh | sh
  - /usr/local/bin/install-docker.sh
  - usermod -aG docker azure-user
  - systemctl stop firewalld
  - systemctl disable firewalld
  - yum -y install iptables-services
  - systemctl enable iptables
  - systemctl enable docker
  - systemctl enable ip6tables
  - systemctl start iptables
  - systemctl start ip6tables
  - iptables -F
  - systemctl stop docker
  - mv /var/lib/docker /mnt/docker
  - ln -s /mnt/docker /var/lib/docker
  - systemctl start docker
  - /usr/local/bin/rancher-start.sh
write_files:
  - path: /etc/sysctl.d/90-kubelet.conf
    owner: root:root  
    permissions: '0644'
    content: |
      vm.overcommit_memory = 1
      vm.panic_on_oom = 0
      kernel.panic = 10
      kernel.panic_on_oops = 1
      kernel.keys.root_maxkeys = 1000000
      kernel.keys.root_maxbytes = 25000000
  - path: /usr/local/bin/rancher-start.sh
    permissions: '0700'
    content: |
      #!/bin/bash -x

      # rancher_ca_checksum
      # rancher_agent_version
      # rancher_server_url
      # rancher_agent_token

      CLUSTER=${cluster_name}
      HOSTNAME=$(curl -H Metadata:True "http://169.254.169.254/metadata/instance?api-version=2019-03-11&format=json" | jq -r .compute.name)
      PRIVATE_IP=$(curl -H Metadata:True "http://169.254.169.254/metadata/instance?api-version=2019-03-11&format=json" | jq -r '.network.interface[0].ipv4.ipAddress[0].privateIpAddress')
      PUBLIC_IP=$(curl -H Metadata:True "http://169.254.169.254/metadata/instance?api-version=2019-03-11&format=json" | jq -r '.network.interface[0].ipv4.ipAddress[0].publicIpAddress')
      IS_WORKER=$(curl -H Metadata:True "http://169.254.169.254/metadata/instance?api-version=2019-03-11&format=json" | jq -r .compute.tags | grep roles:worker | wc -l)
      IS_MASTER=$(curl -H Metadata:True "http://169.254.169.254/metadata/instance?api-version=2019-03-11&format=json" | jq -r .compute.tags | grep roles:master | wc -l)
      IS_BOTH=$(curl -H Metadata:True "http://169.254.169.254/metadata/instance?api-version=2019-03-11&format=json" | jq -r .compute.tags | grep roles:both | wc -l)

      if [ $IS_MASTER = 1 ]; then
        K8S_ROLES="--etcd --controlplane"
      fi
      if [ $IS_WORKER = 1 ]; then
        K8S_ROLES="--worker"
      fi
      if [ $IS_BOTH = 1 ]; then
        K8S_ROLES="--both"
      fi

      echo "IS_MASTER=$IS_MASTER"
      echo "IS_WORKER=$IS_WORKER"
      echo "IS_BOTH=$IS_BOTH"
      echo "K8S_ROLES=$K8S_ROLES"

      CA_CHECKSUM=$(curl --insecure -s -H "Authorization: Bearer ${rancher_agent_token}" ${rancher_server_url}/v3/settings/cacerts | jq -r .value | sha256sum | awk '{ print $1}')

      docker run -d --privileged --restart=unless-stopped --net=host \
      -v /etc/kubernetes:/etc/kubernetes \
      -v /var/run:/var/run \
      rancher/rancher-agent:${rancher_agent_version} \
      --server ${rancher_server_url} \
      --token ${crt_cluster_token} \
      --ca-checksum $CA_CHECKSUM \
      --address eth0 \
      --label k8s.io/cluster=$CLUSTER \
      $K8S_ROLES
